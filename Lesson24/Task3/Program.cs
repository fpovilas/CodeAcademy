using Task3.Class;  namespace Task3 {     internal class Program     {         static void Main()         {             PrintMenu();             int choice = GetChoice();              SwitchCase(choice);         }          private static void PrintMenu()         {             Console.WriteLine("""                 1. Example with Dog, Cat, Hamster Classes                 2. Example with Triangle, Circle, Square                 """);         }          private static int GetChoice()         {             Console.WriteLine("Please enter your choice");             if (int.TryParse(Console.ReadLine(), out var choice))             {                 return choice;             }             return 0;         }          private static List<string> ReturnAnimalNames(Dog dog, Cat cat, Hamster hamster)         {             List<string> animalNames = new()
            {
                dog.Name,
                cat.Name,
                hamster.Name
            };              return animalNames;         }          private static void ReturnAnimals(List<Dog> dogs, List<Cat> cats, List<Hamster> hamsters)         {             for(int i = 0; i < 8;  i++)             {                 dogs.Add(new Dog($"Dog{i}", $"Breed{i}"));             }              for (int i = 0; i < 7; i++)             {                 cats.Add(new Cat($"Cat{i}", $"Breed{i}"));             }              for (int i = 0; i < 7; i++)             {                 hamsters.Add(new Hamster($"Hamster{i}"));             }         }          private static Dictionary<string, int> ReturnAnimalCount(List<Dog> dogs, List<Cat> cats, List<Hamster> hamsters)         {             Dictionary<string, int> animalAndCount = new()
            {
                { "Dog", dogs.Count},
                { "Cat", cats.Count},
                { "Hamster", hamsters.Count},
            };              return animalAndCount;         }          private static void SwitchCase(int choice)         {             switch (choice)             {                 case 1:                     Dog hela = new("Hela", "Husky Terrier");                     Cat viskis = new("Viskis", "Siberian");                     Hamster gelis = new("Gelis");                      List<string> animalNames = ReturnAnimalNames(hela, viskis, gelis);                      Console.WriteLine("Animal names: ");                     foreach (string name in animalNames)                         Console.WriteLine("\t- " + name);                      List<Dog> dogs = new();                     List<Cat> cats = new();                     List<Hamster> hamsters = new();                     ReturnAnimals(dogs, cats, hamsters);                      Dictionary<string, int> animalAndCount = ReturnAnimalCount(dogs, cats, hamsters);                      foreach(KeyValuePair<string, int> animalPair in animalAndCount)                     {                         Console.WriteLine($"{animalPair.Key} - {animalPair.Value}");                     }                     break;                 case 2:                     Triangle trikampis = new(5, 2, 3);                     Console.WriteLine($"Triangle area: {trikampis.Area()}" +                         $"\nTriangle perimeter: {trikampis.Perimeter()}");                      Circle apskritimas = new(5);                     Console.WriteLine($"Circle area: {apskritimas.Area():#.###}" +                         $"\nCircle perimeter: {apskritimas.Perimeter():#.###}");                      Square staciakampis = new(5, 2);                     Console.WriteLine($"Triangle area: {staciakampis.Area()}" +                         $"\nTriangle perimeter: {staciakampis.Perimeter()}");                     break;                 default:                     Console.WriteLine("Wrong choice...");                     break;             }         }     } }