// <auto-generated />
using System;
using FinalProject.Database.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinalProject.Database.Database.Migrations
{
    [DbContext(typeof(PRSDbContext))]
    partial class PRSDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence<int>("PIIndex", "dbo")
                .StartsAt(100L)
                .IncrementsBy(5);

            modelBuilder.HasSequence<int>("PORIndex", "dbo")
                .StartsAt(7L)
                .IncrementsBy(7);

            modelBuilder.HasSequence<int>("PPIndex", "dbo")
                .StartsAt(2L)
                .IncrementsBy(4);

            modelBuilder.HasSequence<int>("UserIndex", "dbo");

            modelBuilder.Entity("FinalProject.Database.Models.PersonalInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR dbo.PIIndex");

                    b.Property<DateOnly?>("Birthday")
                        .HasColumnType("date");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PersonalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("PersonalInformations");
                });

            modelBuilder.Entity("FinalProject.Database.Models.PlaceOfResidence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApartmentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonalInformationId")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PersonalInformationId")
                        .IsUnique()
                        .HasFilter("[PersonalInformationId] IS NOT NULL");

                    b.ToTable("PlaceOfResidences");
                });

            modelBuilder.Entity("FinalProject.Database.Models.ProfilePhoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonalInformationId")
                        .HasColumnType("int");

                    b.Property<string>("PicturePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PersonalInformationId")
                        .IsUnique()
                        .HasFilter("[PersonalInformationId] IS NOT NULL");

                    b.ToTable("ProfilePhotos");
                });

            modelBuilder.Entity("FinalProject.Database.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR dbo.PPIndex");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FinalProject.Database.Models.PersonalInformation", b =>
                {
                    b.HasOne("FinalProject.Database.Models.User", "User")
                        .WithMany("PersonalInformations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinalProject.Database.Models.PlaceOfResidence", b =>
                {
                    b.HasOne("FinalProject.Database.Models.PersonalInformation", "PersonalInformation")
                        .WithOne("PlaceOfResidence")
                        .HasForeignKey("FinalProject.Database.Models.PlaceOfResidence", "PersonalInformationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("PersonalInformation");
                });

            modelBuilder.Entity("FinalProject.Database.Models.ProfilePhoto", b =>
                {
                    b.HasOne("FinalProject.Database.Models.PersonalInformation", "PersonalInformation")
                        .WithOne("ProfilePhoto")
                        .HasForeignKey("FinalProject.Database.Models.ProfilePhoto", "PersonalInformationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("PersonalInformation");
                });

            modelBuilder.Entity("FinalProject.Database.Models.PersonalInformation", b =>
                {
                    b.Navigation("PlaceOfResidence");

                    b.Navigation("ProfilePhoto");
                });

            modelBuilder.Entity("FinalProject.Database.Models.User", b =>
                {
                    b.Navigation("PersonalInformations");
                });
#pragma warning restore 612, 618
        }
    }
}
